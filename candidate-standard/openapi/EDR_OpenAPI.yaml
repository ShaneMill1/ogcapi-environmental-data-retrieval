openapi: 3.0.2
info:
  title: Environmental Data Retrieval API's
  description: Example of Candidate Environmental Data Retrieval API OpenAPI docs
  version: 0.0.9
servers:
  - url: 'http://www.example.org/edr'
    description: ''
paths:
  /:
    get:
      tags:
        - Capabilities
      summary: landing page of this API
      description: 'The landing page provides links to the API definition, the Conformance statements and the metadata about the feature data in this dataset.'
      operationId: getLandingPage
      responses:
        '200':
          description: links to the API capabilities
          content:
            application/json:
              schema:
                $ref: schemas/landingPage.yaml
            text/html:
              schema:
                type: string
      parameters:
        - $ref: '#/components/parameters/outputFormat'
  /conformance:
    get:
      tags:
        - Capabilities
      summary: information about standards that this API conforms to
      description: list all requirements classes specified in a standard that the server conforms to
      operationId: getRequirementsClasses
      responses:
        '200':
          description: the URIs of all requirements classes supported by the server
          content:
            application/json:
              schema:
                $ref: schemas/confClasses.yaml
            text/html:
              schema:
                type: string
      parameters:
        - $ref: '#/components/parameters/outputFormat'
  /groups:
    get:
      tags:
        - Capabilities
      summary: Provide a list of avialable data groups
      operationId: listGroups
      responses:
        '200':
          description: List the available data groups.
          content:
            application/json:
              schema:
                $ref: schemas/groups.yaml
            text/html:
              schema:
                type: string
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
      parameters:
        - $ref: '#/components/parameters/outputFormat'
  /groups/{groupId}:
    get:
      tags:
        - Capabilities
      summary: List of links to information available in the group
      operationId: groupInfomation
      responses:
        '200':
          description: List of links to the data members of the group, these can either be other groups or collections.
          content:
            application/json:
              schema:
                $ref: schemas/groups.yaml
            text/html:
              schema:
                type: string
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
    parameters:
      - $ref: '#/components/parameters/groupId'
      - $ref: '#/components/parameters/bbox'
      - $ref: '#/components/parameters/time'
      - $ref: '#/components/parameters/outputFormat'
  /collections:
    get:
      tags:
        - Capabilities
      summary: List the avialable collections from the service
      operationId: listCollections
      responses:
        '200':
          description: Metdata about the Environmental data collections shared by this API.
          content:
            application/json:
              schema:
                $ref: schemas/collections.yaml
            text/html:
              schema:
                type: string
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
    parameters:
      - $ref: '#/components/parameters/bbox'
      - $ref: '#/components/parameters/time'
      - $ref: '#/components/parameters/outputFormat'
  /collections/{collectionId}:
    get:
      tags:
        - Collection metadata 
      summary: List query types supported by the collection
      description: This will provide information about the query types that are supported by the chosen collection Use content negotiation to request HTML or JSON.
      operationId: getQueries
      responses:
        '200':
          description: 'Metadata about the {collectionId} collection shared by this API.'
          content:
            application/json:
              schema:
                $ref: schemas/collection.yaml
            text/html:
              schema:
                type: string
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
    parameters:
      - $ref: '#/components/parameters/collectionId'
      - $ref: '#/components/parameters/outputFormat'
  /collections/{collectionId}/position:
    get:
      tags:
        - Collection data queries
      summary: 'Query end point for position queries  of collection {collectionId}'
      description: Query end point for position queries
      operationId: getDataForPoint
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/pointCoords'
        - $ref: '#/components/parameters/z'
        - $ref: '#/components/parameters/time'
        - $ref: '#/components/parameters/parametername'        
        - $ref: '#/components/parameters/crs'
        - $ref: '#/components/parameters/outputFormat'
      responses:
        '200':
          description: Data ranges required to construct valid queries for the choosen data collection
          content:
            application/prs.coverage+json:
              schema:
                $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/radius:
    get:
      tags:
        - Collection data queries
      summary: 'Query end point for radius queries  of collection {collectionId}'
      description: Query end point for to return values within a defined radius of a point queries
      operationId: getDataForRadius
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/radiusCoords'
        - $ref: '#/components/parameters/within'
        - $ref: '#/components/parameters/withinUnits'        
        - $ref: '#/components/parameters/z'
        - $ref: '#/components/parameters/time'
        - $ref: '#/components/parameters/parametername'
        - $ref: '#/components/parameters/crs'
        - $ref: '#/components/parameters/outputFormat'            
      responses:
        '200':
          description: Data ranges required to construct valid queries for the choosen data collection
          content:
            application/prs.coverage+json:
              schema:
                $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/area:
    get:
      tags:
        - Collection data queries
      summary: 'Query end point for area queries  of collection {collectionId} defined by a polygon'
      description: Return the data values for the data area defined by the query parameters
      operationId: GetDataForArea
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/areaCoords'
        - $ref: '#/components/parameters/z'
        - $ref: '#/components/parameters/time'
        - $ref: '#/components/parameters/parametername'
        - $ref: '#/components/parameters/crs'
        - $ref: '#/components/parameters/resolutionX'
        - $ref: '#/components/parameters/resolutionY'
        - $ref: '#/components/parameters/outputFormat'        
      responses:
        '200':
          description: Data ranges required to construct valid queries for the choosen data collection
          content:
            application/prs.coverage+json:
              schema:
                $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/cube:
    get:
      tags:
        - Collection data queries
      summary: 'Query end point for Cube queries  of collection {collectionId} defined by a cube'
      description: Return the data values for the data Cube defined by the query parameters
      operationId: GetDataForCube
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/cubeCoords'
        - $ref: '#/components/parameters/minZ'
        - $ref: '#/components/parameters/maxZ'
        - $ref: '#/components/parameters/time'        
        - $ref: '#/components/parameters/parametername'
        - $ref: '#/components/parameters/resolutionX'            
        - $ref: '#/components/parameters/resolutionY'            
        - $ref: '#/components/parameters/resolutionZ'            
        - $ref: '#/components/parameters/crs'
        - $ref: '#/components/parameters/outputFormat'            
      responses:
        '200':
          description: Data ranges required to construct valid queries for the choosen data collection
          content:
            application/prs.coverage+json:
              schema:
                $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/trajectory:
    get:
      tags:
        - Collection data queries
      summary: 'Query end point for trajectory queries  of collection {collectionId} defined by a wkt linestring and a iso8601 time period'
      description: Return the data values for the data Polygon defined by the query parameters
      operationId: GetDataForTrajectory
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/trajectoryCoords'
        - $ref: '#/components/parameters/z'
        - $ref: '#/components/parameters/time'      
        - $ref: '#/components/parameters/parametername'
        - $ref: '#/components/parameters/crs'
        - $ref: '#/components/parameters/outputFormat'            
      responses:
        '200':
          description: Data ranges required to construct valid queries for the choosen data collection
          content:
            application/prs.coverage+json:
              schema:
                $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/corridor:
    get:
      tags:
        - Collection data queries
      summary: 'Query end point for Corridor queries  of collection {collectionId} defined by a polygon'
      description: Return the data values for the Corridor defined by the query parameters
      operationId: GetDataForCorridor
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/corridorCoords'
        - $ref: '#/components/parameters/z'
        - $ref: '#/components/parameters/time'
        - $ref: '#/components/parameters/parametername'         
        - $ref: '#/components/parameters/corridorWidth'
        - $ref: '#/components/parameters/corridorHeight'
        - $ref: '#/components/parameters/resolutionX'
        - $ref: '#/components/parameters/resolutionZ'
        - $ref: '#/components/parameters/crs'            
        - $ref: '#/components/parameters/outputFormat'            
      responses:
        '200':
          description: Data ranges required to construct valid queries for the choosen data collection
          content:
            application/prs.coverage+json:
              schema:
                $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/items:
    get:
      tags:
        - Collection metadata
      summary: List available items
      description: List the items available in the collection accessible via a unique identifier
      operationId: ListDataItems
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/time'
      responses:
        '200':
          description: List of pre-existing items available for retrieval 
          content:
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/json: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            application/x-netcdf: {}
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            application/x-netcdf: {}
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/items/{itemID}:
    get:
      tags:
        - Collection data queries
      summary: Return item {itemId} from collection {collectionId} 
      description: 'Query end point to retrieve data from collection {collectionId} using a unique identifier'
      operationId: GetDataForItem
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - name: itemID
          in: path
          required: true
          description: 'Retrieve data from the collection using a unique identifier.'
          schema:
            type: string
      responses:
        '200':
          description: Data ranges required to construct valid queries for the choosen data collection
          content:
            application/json: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            application/x-netcdf: {}
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            application/x-netcdf: {}
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/instances:
    get:
      tags:
        - Collection metadata
      summary: 'List data instances of {collectionId}'
      description: This will provide list of the avalable instances of the collection Use content negotiation to request HTML or JSON.
      operationId: getCollectionInstances
      responses:
        '200':
          description: 'Metadata about the instance of {collectionId} collection shared by this API.'
          content:
            application/json:
              schema:
                $ref: schemas/instances.yaml
            text/html:
              schema:
                type: string
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
    parameters:
      - $ref: '#/components/parameters/collectionId'
      - $ref: '#/components/parameters/outputFormat'
  /collections/{collectionId}/instances/{instanceId}/position:
    get:
      tags:
        - Instance data queries
      summary: 'Query end point for position queries of instance {instanceId} of collection {collectionId}'
      description: Query end point for position queries
      operationId: getInstanceDataForPoint
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/instanceId'
        - $ref: '#/components/parameters/pointCoords'        
        - $ref: '#/components/parameters/z'
        - $ref: '#/components/parameters/time'
        - $ref: '#/components/parameters/parametername'
        - $ref: '#/components/parameters/crs'        
        - $ref: '#/components/parameters/outputFormat'
      responses:
        '200':
          description: Data ranges required to construct valid queries for the choosen data collection
          content:
            application/prs.coverage+json:
              schema:
                $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/instances/{instanceId}/radius:
    get:
      tags:
        - Instance data queries
      summary: 'Query end point to return data within defined radius of a point for an instance {instanceId} of collection {collectionId}'
      description: Query end point to return all data within a defined radius of the defined point location queries
      operationId: getInstanceDataForRadius
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/instanceId'
        - $ref: '#/components/parameters/radiusCoords'
        - $ref: '#/components/parameters/z'        
        - $ref: '#/components/parameters/time'
        - $ref: '#/components/parameters/within'
        - $ref: '#/components/parameters/withinUnits'
        - $ref: '#/components/parameters/parametername'
        - $ref: '#/components/parameters/crs'
        - $ref: '#/components/parameters/outputFormat'        
      responses:
        '200':
          description: Data ranges required to construct valid queries for the choosen data collection
          content:
            application/prs.coverage+json:
              schema:
                $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/instances/{instanceId}/area:
    get:
      tags:
        - Instance data queries
      summary: 'Query end point for area queries of instance {instanceId} of collection {collectionId} defined by a polygon'
      description: Return the data values for the data area defined by the query parameters
      operationId: GetInstanceDataForArea
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/instanceId'
        - $ref: '#/components/parameters/areaCoords'
        - $ref: '#/components/parameters/z'
        - $ref: '#/components/parameters/time'
        - $ref: '#/components/parameters/parametername'
        - $ref: '#/components/parameters/resolutionX'
        - $ref: '#/components/parameters/resolutionY'
        - $ref: '#/components/parameters/crs'
        - $ref: '#/components/parameters/outputFormat'
      responses:
        '200':
          description: Data ranges required to construct valid queries for the choosen data collection
          content:
            application/prs.coverage+json:
              schema:
                $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to 
           process
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/instances/{instanceId}/cube:
    get:
      tags:
        - Instance data queries
      summary: 'Query end point for Cube queries of instance {instanceId} of collection {collectionId} defined by a cube'
      description: Return the data values for the data Cube defined by the query parameters
      operationId: GetInstanceDataForCube
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/instanceId'
        - $ref: '#/components/parameters/cubeCoords'
        - $ref: '#/components/parameters/minZ'
        - $ref: '#/components/parameters/maxZ'
        - $ref: '#/components/parameters/time'        
        - $ref: '#/components/parameters/parametername'
        - $ref: '#/components/parameters/resolutionX'            
        - $ref: '#/components/parameters/resolutionY'            
        - $ref: '#/components/parameters/resolutionZ'            
        - $ref: '#/components/parameters/crs'
        - $ref: '#/components/parameters/outputFormat'
      responses:
        '200':
          description: Data ranges required to construct valid queries for the choosen data collection
          content:
            application/prs.coverage+json:
              schema:
                $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/instances/{instanceId}/trajectory:
    get:
      tags:
        - Instance data queries
      summary: 'Query end point for trajectory queries of instance {instanceId} of collection {collectionId} defined by a wkt linestring and a iso8601 time period'
      description: Return the data values for the data Polygon defined by the query parameters
      operationId: GetInstanceDataForTrajectory
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/instanceId'
        - $ref: '#/components/parameters/trajectoryCoords'
        - $ref: '#/components/parameters/z'
        - $ref: '#/components/parameters/time'        
        - $ref: '#/components/parameters/parametername'
        - $ref: '#/components/parameters/crs'
        - $ref: '#/components/parameters/outputFormat'        
      responses:
        '200':
          description: Data ranges required to construct valid queries for the choosen data collection
          content:
            application/prs.coverage+json:
              schema:
                $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/instances/{instanceId}/corridor:
    get:
      tags:
        - Instance data queries
      summary: 'Query end point for Corridor queries of instance {instanceId} of collection {collectionId} defined by a polygon'
      description: Return the data values for the Corridor defined by the query parameters
      operationId: GetInstanceDataForCorridor
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/instanceId'
        - $ref: '#/components/parameters/corridorCoords'
        - $ref: '#/components/parameters/z'
        - $ref: '#/components/parameters/time'        
        - $ref: '#/components/parameters/parametername'
        - $ref: '#/components/parameters/corridorWidth'
        - $ref: '#/components/parameters/corridorHeight'
        - $ref: '#/components/parameters/resolutionX'
        - $ref: '#/components/parameters/resolutionZ'
        - $ref: '#/components/parameters/crs'        
        - $ref: '#/components/parameters/outputFormat'
      responses:
        '200':
          description: Data ranges required to construct valid queries for the choosen data collection
          content:
            application/prs.coverage+json:
              schema:
                $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '400':
          description: Invalid request.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/locations:
    get:
      tags:
        - Collection metadata
      summary: List available location identifers for the collection
      description: List the locations available for the collection
      operationId: ListCollectionDataLocations
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/time'
      responses:
        '200':
          description: List of predefined locations available from the collection
          content:
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            application/x-netcdf: {}
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            application/x-netcdf: {}
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/locations/{locID}:
    get:
      tags:
        - Collection data queries
      summary: 'Query end point for queries of collection {collectionId} defined by a location id'
      description: Return data the for the location defined by locid
      operationId: GetCollectionDataForLocation
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/locID'
        - $ref: '#/components/parameters/time'
        - $ref: '#/components/parameters/crs'          
        - $ref: '#/components/parameters/outputFormat'
      responses:
        '200':
          description: Data returned by querying by location identifier
          content:
            application/prs.coverage+json:
              schema:
                $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            application/x-netcdf: {}
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            application/x-netcdf: {}
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/instances/{instanceId}/locations:
    get:
      tags:
        - Instance metadata
      summary: List available location identifers for the instance
      description: List the locations available for the instance of the collection
      operationId: ListDataInstanceLocations
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/instanceId'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/time'
      responses:
        '200':
          description: List of predefined locations available from the instance of the collection
          content:
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            application/x-netcdf: {}
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            application/x-netcdf: {}
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string
  /collections/{collectionId}/instances/{instanceId}/locations/{locID:
    get:
      tags:
        - Instance data queries
      summary: 'Query end point for queries of instance {instanceId} of collection {collectionId} defined by a location id'
      description: Return data the for the location defined by locid
      operationId: GetInstanceDataForLocation
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/instanceId'
        - $ref: '#/components/parameters/locID'
        - $ref: '#/components/parameters/time'
        - $ref: '#/components/parameters/crs'          
        - $ref: '#/components/parameters/outputFormat'            
      responses:
        '200':
          description: Data returned when querying by identifier
          content:
            application/prs.coverage+json:
              schema:
                $ref: schemas/coverageJSON.yaml
            application/geo+json:
              schema:
                $ref: schemas/edrFeatureCollectionGeoJSON.yaml
            application/x-netcdf: {}
            text/xml: {}
        '202':
          description: Data request still being processed
        '308':
          description: Request will take a significant time to process
        '404':
          description: Requested data not found.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        '413':
          description: Requested data volume to large to be handled by this service.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/xml: {}
        default:
          description: An error occured.
          content:
            application/json:
              schema:
                $ref: schemas/exception.yaml
            text/html:
              schema:
                type: string

components:
  parameters:
    bbox:
      name: bbox
      in: query
      description: |
        Only features that have a geometry that intersects the bounding box are selected. The bounding box is provided as four or six numbers, depending on whether the coordinate reference system includes a vertical axis (elevation or depth):
        * Lower left corner, coordinate axis 1 * Lower left corner, coordinate axis 2 * Lower left corner, coordinate axis 3 (optional) * Upper right corner, coordinate axis 1 * Upper right corner, coordinate axis 2 * Upper right corner, coordinate axis 3 (optional)
        The coordinate reference system of the values is WGS84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference system is specified in the parameter `bbox-crs`.
        For WGS84 longitude/latitude the values are in most cases the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge).
        If a feature has multiple spatial geometry properties, it is the decision of the server whether only a single spatial geometry property is used to determine the extent or all relevant geometries.
      required: false
      style: form
      explode: false
      schema:
        maxItems: 6
        minItems: 4
        type: array
        items:
          type: number
    time:
      name: datetime
      in: query
      description: |-
        Either a date-time or a period string that adheres to RFC 3339. Examples:
        * A date-time: "2018-02-12T23:20:50Z" * A period: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z" or "2018-02-12T00:00:00Z/P1M6DT12H31M12S" or a list of
        date-times "2018-02-12T00:00:00Z,2018-06-12T03:00:00Z,2020-02-15T21:00:00Z"
        Only features that have a temporal property that intersects the value of `datetime` are selected.
        If a feature has multiple temporal properties, it is the decision of the server whether only a single temporal property is used to determine the extent or all relevant temporal properties.
      required: false
      style: form
      explode: false
      schema:
        type: string
    collectionId:
      name: collectionId
      in: path
      description: Identifier (id) of a specific collection
      required: true
      schema:
        type: string
    crs:
      name: crs
      in: query
      description: identifier (id) of the coordinate system to return data in list of valid crs identifiers for the chosen collection are defined in the metadata responses.  If not supplied the coordinate reference system will default to WGS84.
      required: false
      example: native
      schema:
        type: string
    groupId:
      name: groupId
      in: path
      description: Identifier (name) of a specific group
      required: true
      schema:
        type: string
    instanceId:
      name: instanceId
      in: path
      description: Identifier (id) of a specific instance of a collection
      required: true
      schema:
        type: string
    outputFormat:
      name: f
      in: query
      description: Format to return query results in
      required: false
      schema:
        type: string
    parametername:
      name: parametername
      in: query
      description: |-
        comma delimited list of parameters to retrieve data for.  Valid parameters are
        listed in the collections metadata
      required: true
      explode: false
      schema:
        minItems: 1
        type: array
        items:
          type: string
    resolution:
      name: resolution
      in: query
      description: |
        Defined if the user requires data at a different resolution from the native resolution of the data along the requested path
        
        If this is a single value it denotes the number of intervals to retrieve data for along the path
          
          i.e. resolution=10 
          
          would retrieve 10 values along the path from the first coordinate value to the last coordinate value (i.e. a value at both the first and last coordinates and 8 values between).

      schema:
        type: string
    corridorWidth:
      name: corridorwidth
      in: query
      description: |
        width of the corridor and the units of the width value
        
        The width value represents the whole width of the corridor where
        the position supplied in the `coords` query parameter is the centre
        point of the corridor

        `corridorwidth={width}/{units}`

        e.g.  corridorwidth=100/m

        Would be a request for a corridor 100m wide with the coords parameter values being the centre point of the requested corridor, the request would be for data values 50m either side of the coordinates defined in the coords parameter. 
        
        The width units supported by the collection will be provided in
        the API metadata responses 
      schema:
        type: string
    corridorHeight:
      name: corridorheight
      in: query
      description: |
        height of the corridor and the units of the height value
        
        The height value represents the whole height of the corridor where
        the position supplied in the `coords` query parameter is the centre
        point of the corridor

        `corridorheight={height}/{units}`

        e.g.  corridorheight=100/m

        Would be a request for a corridor 100m high with the coords parameter values being the centre point of the requested corridor, the request would be for data values 50m either side of the coordinates defined in the coords parameter. 
        
        The height units supported by the collection will be provided in
        the API metadata responses
      schema:
        type: string        
    minZ:
      name: minz
      in: query
      required: true
      description: |
        Define the location of the bottom of the cube 
        i.e. minz=level

        for instance if bottom of cube is at the 950hPa pressure level

        minZ=850

        The units will default to those of the coordinate reference system.  
        If no CRS is defined the values will be assumed to be 
        height above sea level in metres. 
      schema:
        type: string
    maxZ:
      name: maxz
      in: query
      required: true
      description: |
        Define the location of the top of the cube 
        i.e. maxz=level

        for instance if top of cube is at the 650hPa pressure level

        maxz=650

        The units will default to those of the coordinate reference system.  
        If no CRS is defined the values will be assumed to be 
        height above sea level in metres. 
      schema:
        type: string
    resolutionX:
      name: resolutionx
      in: query
      description: |+
        Defined it the user requires data at a different resolution from the native resolution of the data along the x-axis
        
        If this is a single value it denotes the number of intervals to retrieve data for along the x-axis
          
          i.e. resolutionx=10 
          
          would retrieve 10 values along the x-axis from the minimum x coordinate to maximum x coordinate (i.e. a value at both the minimum x and maximum x coordinates and 8 values between).

      schema:
        type: string
    resolutionY:
      name: resolutiony
      in: query
      description: |
        Defined it the user requires data at a different resolution from the native resolution of the data along the y-axis
        
        If this is a single value it denotes the number of intervals to retrieve data for along the y-axis
          
          i.e. resolutiony=10 
          
          would retrieve 10 values along the y-axis from the minimum y coordinate to maximum y coordinate (i.e. a value at both the minimum y and maximum y coordinates and 8 values between).

      schema:
        type: string
    resolutionZ:
      name: resolutionz
      in: query
      description: |+
        Defined it the user requires data at a different resolution from the native resolution of the data along the z-axis
        
        If this is a single value it denotes the number of intervals to retrieve data for along the z-axis
          
          i.e. resolutionz=10 
          
          would retrieve 10 values along the z-axis from the minimum z coordinate to maximum z  coordinate (i.e. a value at both the minimum z and maximum z coordinates and 8 values between).

      schema:
        type: string
    pointCoords:
      name: coords
      in: query
      description: |
        location(s) to return data for, the coordinates are defined by a Well Known Text
        (wkt) string. to retrieve a single location :

        POINT(x y) i.e. POINT(0 51.48) for Greenwich, London

        And for a list of locations

        MULTIPOINT((x y),(x1 y1),(x2 y2),(x3 y3))

        i.e.
        MULTIPOINT((38.9 -77),(48.85 2.35),(39.92 116.38),(-35.29 149.1),(51.5 -0.1))


        see http://portal.opengeospatial.org/files/?artifact_id=25355 and 
        https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry

        the coordinate values will depend on the CRS parameter, if this is not defined
        the values will be assumed to WGS85 values (i.e x=longitude and y=latitude)
      required: true
      schema:
        type: string
    radiusCoords:
      name: coords
      in: query
      description: |
        location(s) to return data for, the coordinates are defined by a Well Known Text
        (wkt) string. to retrieve a single location :

        POINT(x y) i.e. POINT(0 51.48) for Greenwich, London

        And for a list of locations

        MULTIPOINT((x y),(x1 y1),(x2 y2),(x3 y3))

        i.e.
        MULTIPOINT((38.9 -77),(48.85 2.35),(39.92 116.38),(-35.29 149.1),(51.5 -0.1))


        see http://portal.opengeospatial.org/files/?artifact_id=25355 and 
        https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry

        the coordinate values will depend on the CRS parameter, if this is not defined
        the values will be assumed to WGS85 values (i.e x=longitude and y=latitude)
      required: true
      schema:
        type: string
    within:
      name: within
      in: query
      description: Defines radius of area around defined coordinates to include in the data selection
      required: true
      example: 10
      schema:
        type: number
    withinUnits:
      name: withinunits
      in: query
      description: Distance units for the within parameter
      required: true
      example: KM
      schema:
        type: string
    areaCoords:
      name: coords
      in: query
      description: |-
        Only data that has a geometry that intersects the area defined by the polygon
        are selected. 

        The polygon is defined using a Well Known Text string following 

        coords=POLYGON((x y,x1 y1,x2 y2,...,xn yn x y))

        which are values in the coordinate system defined by the crs query parameter 
        (if crs is not defined the values will be assumed to be WGS84 longitude/latitude coordinates).  

        For instance a polygon that roughly describes an area that contains 
        South West England in WGS84 would look like: 

        coords=POLYGON((-6.1 50.3,-4.35 51.4,-2.6 51.6,-2.8 50.6,-5.3 49.9,-6.1,50.3))

        see http://portal.opengeospatial.org/files/?artifact_id=25355 and 
        https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry

        The coords parameter will only support 2D POLYGON definitions
      required: true
      schema:
        type: string
    z:
      name: z
      in: query
      description: |
        Define the vertical level to return data from 
        i.e. z=level

        for instance if the 850hPa pressure level is being queried

        z=850
        
        or a range to return data for all levels between and including 2 defined levels
        i.e. z=minimum value/maximum value
        
        for instance if all values between and including 10m and 100m
        
        z=10/100

        finally a list of height values can be specified
        i.e. z=value1,value2,value3
        
        for instance if values at 2m, 10m and 80m are required
        
        z=2,10,80
        
        When not specified data from all available heights SHOULD be returned
      schema:
        type: string
    cubeCoords:
      name: coords
      in: query
      description: |-
        Only data that has a geometry that intersects the area defined by the cube
        are selected. 

        The cubes x y coordinates are defined using **Rectangular Polygon** as Well Known Text

        coords=POLYGON((x y,x1 y1,x2 y2, x3 y3, x y))

        which are values in the coordinate system defined by the crs query parameter 
        if crs is not defined the values will be assumed to be 
        WGS84 longitude/latitude coordinates and heights will be assumed 
        to be in metres above mean sea level  

        For instance a cube that roughly describes an area that contains 
        South West England in WGS84 would look like

        coords=POLYGON((-6.0 50.0,-4.35 50.0,-4.35 52.0,,-6.0 52.0,-6.0 50.0))

        `If the WKT does not define a Rectangle the service will generate 
        an 400 error message`

        see http://portal.opengeospatial.org/files/?artifact_id=25355 and 
        https://en.wikipedia.org/wiki/Well-known_text_representation_of_geometry
      required: true
      schema:
        type: string
    trajectoryCoords:
      name: coords
      in: query
      description: |-
        Only data that has a geometry that intersects the area defined by the linestring
        are selected. 

        The trajectory is defined using a Well Known Text string following 

        A 2D trajectory, on the surface of earth with no time or height dimensions: 
         coords=LINESTRING(51.14 -2.98, 51.36 -2.87, 51.03 -3.15, 50.74 -3.48, 50.9 -3.36)

        A 2D trajectory, on the surface of earth with all for the same time and no height dimension, time value defined in ISO8601 format by the `datetime` query parameter : 
         coords=LINESTRING(51.14 -2.98, 51.36 -2.87, 51.03 -3.15, 50.74 -3.48, 50.9 -3.36)&time=2018-02-12T23:00:00Z 
         
        A 2D trajectory, on the surface of earth with no time value but at a fixed height level, height defined in the collection height units by the `z` query parameter : 
         coords=LINESTRING(51.14 -2.98, 51.36 -2.87, 51.03 -3.15, 50.74 -3.48, 50.9 -3.36)&z=850 

        A 2D trajectory, on the surface of earth with all for the same time and at a fixed height level, time value defined in ISO8601 format by the `datetime` query parameter and height defined in the collection height units by the `z` query parameter : 
         coords=LINESTRING(51.14 -2.98, 51.36 -2.87, 51.03 -3.15, 50.74 -3.48, 50.9 -3.36)&time=2018-02-12T23:00:00Z&z=850 

        A 3D trajectory, on the surface of the earth but over a time range with no height values:
        coords=LINESTRINGM(51.14 -2.98 1560507000, 51.36 -2.87 1560507600, 51.03 -3.15 1560508200, 50.74 -3.48 1560508500, 50.9 -3.36 1560510240)

        A 3D trajectory, on the surface of the earth but over a time range with a fixed height value, height defined in the collection height units by the `z` query parameter : 
        coords=LINESTRINGM(51.14 -2.98 1560507000, 51.36 -2.87 1560507600, 51.03 -3.15 1560508200, 50.74 -3.48 1560508500, 50.9 -3.36 1560510240)&z=200


        A 3D trajectory, through a 3D volume with height or depth, but no defined time:
        coords=LINESTRINGZ(51.14 -2.98 0.1, 51.36 -2.87 0.2, 51.03 -3.15 0.3, 50.74 -3.48 0.4, 50.9 -3.36 0.5)

        A 3D trajectory, through a 3D volume with height or depth, but a fixed time time value defined in ISO8601 format by the `datetime` query parameter:
        coords=LINESTRINGZ(51.14 -2.98 0.1, 51.36 -2.87 0.2, 51.03 -3.15 0.3, 50.74 -3.48 0.4, 50.9 -3.36 0.5)&time=2018-02-12T23:00:00Z

        A 4D trajectory, through a 3D volume but over a time range:
        coords=LINESTRINGZM(51.14 -2.98 0.1 1560507000,51.36 -2.87 0.2 1560507600, 51.03 -3.15 0.3 1560508200, 50.74 -3.48 0.4 1560508500, 50.9 -3.36 0.5 1560510240)
        (using either the `time` or `z` parameters with a 4D trajectory wil generate an error response)

        where `Z` is the height value.  
        `If the specified CRS does not define the height units the heights will units will default to metres above mean sea level`
        
        and `M` the number of seconds that have elapsed since the Unix epoch, that is the time 00:00:00 UTC on 1 January 1970. See
        https://en.wikipedia.org/wiki/Unix_time

      required: true
      schema:
        type: string
    corridorCoords:
      name: coords
      in: query
      description: |-
        Only data that has a geometry that intersects the area defined by the linestring
        are selected. 

        The centre of the corridor is defined using a Well Known Text string following 

        A 2D corridor, on the surface of earth, at the same time: 
         coords=LINESTRING(51.14 -2.98, 51.36 -2.87, 51.03 -3.15, 50.74 -3.48, 50.9 -3.36)

        A 3D corridor centre, on the surface of the earth but over a time range:
        coords=LINESTRINGM(51.14 -2.98 1560507000, 51.36 -2.87 1560507600, 51.03 -3.15 1560508200, 50.74 -3.48 1560508500, 50.9 -3.36 1560510240)

        A 3D corridor centre, through a 3D volume with height or depth, for the same time:
        coords=LINESTRINGZ(51.14 -2.98 0.1, 51.36 -2.87 0.2, 51.03 -3.15 0.3, 50.74 -3.48 0.4, 50.9 -3.36 0.5)

        A 4D corridor, through a 3D corridor centre but over a time range:
        coords=LINESTRINGZM(51.14 -2.98 0.1 1560507000,51.36 -2.87 0.2 1560507600, 51.03 -3.15 0.3 1560508200, 50.74 -3.48 0.4 1560508500, 50.9 -3.36 0.5 1560510240)

        where `Z` is the height value.  
        `If the specified CRS does not define the height units the heights will units will default to metres above mean sea level`
        
        and `M` the number of seconds that have elapsed since the Unix epoch, that is the time 00:00:00 UTC on 1 January 1970. See
        https://en.wikipedia.org/wiki/Unix_time
        
      required: true
      schema:
        type: string
    locID:
      name: locID
      in: path
      required: true
      description: 'Retreive data for the location defined by locID (i.e. London_Heathrow, EGLL, 03772 etc)'
      schema:
        type: string
    crsName:
      name: outputcrs
      in: query
      schema:
        type: string
        example: CRS84      

        
tags:
  - name: Capabilities
    description: Essential characteristics of the information available from the API.
  - name: Collection metadata
    description: Description of the information available from the collections
  - name: Instance metadata
    description: Description of the information available from instances of a collection
  - name: Collection data queries
    description: Data queries available.
  - name: Instance data queries
    description: Data queries available on instances of the collection.
